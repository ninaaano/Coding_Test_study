package study001;

import java.util.Scanner;

public class p11726_2xN타일체우기 {
	
	// 2xn 크기의 직사각형을 1x2 or 2x1 타일로 체우는 방법의 수를 구하는 프로그램 작성
	
	// 1번째 줄에 N이 주어진다 (1<=N<=1,000)
	// 1번째 줄에 2xN 크기의 직사각형을 채우는 방법의 수를 10.007로 나눈 나머지를 출력한다
	
	// DP를 의심해 볼 수 있다
	// D[N] 점화식 정의. 정의 한 후 단순화 되도록 가정
	// 1부터 N-1 크기에 직사각형과 관련된 경우의 수를 모두 구했다고 가정해쓸때
	// N보다 작은 길이의 모든 경우의 수가 구해져 있다고 가정했으므로
	// N 바로 직전에 구해야하는 N-1, N-2에서 N의 길이를 만들기 위한 경우의 수 생각
	
	// D[N] = 2xN 직사각형을 채우는 경우의 수
	// D[N-1], D[N-2] 를 구했다고 가정
	// N-1과 N-2에서 만들 수 있는 타일의 경우의 수를 더하면서 N 길이에서의 경우의 수를 구할 수 있다
	
	// 점화식
	// D[N] = D[N-1]+D[N-2]
	
	// 1. 점화식의 형태와 의미를 도출한다
	// D[N] : 길이 N으로 만들 수 있는 타일의 경우의 수
	// 2. 점화식을 구한다
	// D[N] = D[N-1]+D[N-2] // D[N-1]과 D[N-2]의 경우의 수 합이 D[N]
	// 3. 점화식으로 D 배열을 체운 후 D[N]의 값을 출력한다.
	// D 배열을 체울 때마다 문제에서 주어진 값(10.007)으로 %연산을 수행하는 것 잊지말기
	
	// 슈도코드
//	D[N](길이가 2*N인 직사각형이 2*1, 1*2 타일을 붙일 수 있는 경우의 수)
//	D[1] = 1 // 길이가 2x1 일때 타일의 경우의 수
//	D[2] = 2 // 길이가 1x2 일때 타일의 경우의 수
//	for(i - 3 - N) {
//		D[i] =  D[i-1]+D[i-2] // N-1 길이일 때 경우의 수 + N-2 길이일 때 경우의 수
//		나온 결과를 10007 나머지 연산 수행하기
//	}
//	D[N]값 출력하기
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		long D[] = new long[1001];
		D[1]=1; // N=1 일때 타일 체우는 경우의 수
		D[2]=2; // N=2 일때 타일 체우는 경우의 수
		
		for(int i = 3; i<=N; i++) { // 1,2는 위에서 선언했기 때문에 3부터 시작
			D[i] =  (D[i-1]+D[i-2]) % 10007;
		}
		System.out.println(D[N]);
	}

}
